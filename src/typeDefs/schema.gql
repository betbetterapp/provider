type Query {
    fixtures(live: Boolean = false): [Fixture!]!
    fixtureById(id: ID!, live: Boolean = false): Fixture
}

type Subscription {
    fixtureUpdate: Fixture!
}

type Fixture {
    id: ID!
    timestamp: Float!
    referee: String
    goals: FixtureGoals!
    league: FixtureLeague!
    teams: FixtureTeams!
    venue: FixtureVenue!
    status: FixtureStatus!
    events: [FixtureEvent!]
}

type FixtureGoals {
    home: Int
    away: Int
}

type FixtureLeague {
    id: ID!
    name: String!
    country: String!
    logo: String!
    season: Int!
    round: String!
}

type FixtureTeams {
    home: FixtureTeam!
    away: FixtureTeam!
    winner: FixtureTeam
}

type FixtureTeam {
    id: ID!
    name: String!
    logo: String!
}

type FixtureVenue {
    id: ID!
    name: String!
    city: String!
}

type FixtureStatus {
    long: String!
    short: String!
    elapsed: Int
}

type FixtureEvent {
    time: FixtureEventTime!
    team: FixtureTeam!
    player: FixtureEventPlayer!
    assist: FixtureEventPlayer!
    type: String!
    detail: String!
    comments: String
}

type FixtureEventTime {
    elapsed: Int!
    extra: Int
}

type FixtureEventPlayer {
    id: ID
    name: String
}
